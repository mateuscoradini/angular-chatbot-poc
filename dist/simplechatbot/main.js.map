{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api-ai-javascript/index.ts","webpack:///./src/app/api-ai-javascript/ts/ApiAiClient.ts","webpack:///./src/app/api-ai-javascript/ts/ApiAiConstants.ts","webpack:///./src/app/api-ai-javascript/ts/Errors.ts","webpack:///./src/app/api-ai-javascript/ts/Interfaces.ts","webpack:///./src/app/api-ai-javascript/ts/Request/EventRequest.ts","webpack:///./src/app/api-ai-javascript/ts/Request/Request.ts","webpack:///./src/app/api-ai-javascript/ts/Request/TextRequest.ts","webpack:///./src/app/api-ai-javascript/ts/XhrRequest.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat.service.ts","webpack:///./src/app/chat/chat-dialog/chat-dialog.component.css","webpack:///./src/app/chat/chat-dialog/chat-dialog.component.html","webpack:///./src/app/chat/chat-dialog/chat-dialog.component.ts","webpack:///./src/app/chat/chat.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","/// <reference path=\"declarations.d.ts\"/>\nexport * from \"./ts/ApiAiClient\";\n","import { ApiAiConstants } from \"./ApiAiConstants\";\nimport { ApiAiClientConfigurationError } from \"./Errors\";\nimport { EventRequest } from \"./Request/EventRequest\";\nimport TextRequest from \"./Request/TextRequest\";\n// import { TTSRequest } from \"./Request/TTSRequest\";\n\nimport { IApiClientOptions, IRequestOptions, IServerResponse, IStringMap } from \"./Interfaces\";\n\nexport * from \"./Interfaces\";\nexport {ApiAiConstants} from \"./ApiAiConstants\";\n\nexport class ApiAiClient {\n\n    private apiLang: ApiAiConstants.AVAILABLE_LANGUAGES;\n    private apiVersion: string;\n    private apiBaseUrl: string;\n    private sessionId: string;\n    private accessToken: string;\n\n    constructor(options: IApiClientOptions) {\n\n        if (!options || !options.accessToken) {\n            throw new ApiAiClientConfigurationError(\"Access token is required for new ApiAi.Client instance\");\n        }\n\n        this.accessToken = options.accessToken;\n        this.apiLang = options.lang || ApiAiConstants.DEFAULT_CLIENT_LANG;\n        this.apiVersion = options.version || ApiAiConstants.DEFAULT_API_VERSION;\n        this.apiBaseUrl = options.baseUrl || ApiAiConstants.DEFAULT_BASE_URL;\n        this.sessionId = options.sessionId || this.guid();\n    }\n\n    public textRequest(query, options: IRequestOptions = {}): Promise<IServerResponse> {\n        if (!query) {\n            throw new ApiAiClientConfigurationError(\"Query should not be empty\");\n        }\n        options.query = query;\n        return new TextRequest(this, options).perform();\n    }\n\n    public eventRequest(eventName, eventData: IStringMap = {},\n                        options: IRequestOptions = {}): Promise<IServerResponse> {\n        if (!eventName) {\n            throw new ApiAiClientConfigurationError(\"Event name can not be empty\");\n        }\n        options.event = {name: eventName, data: eventData};\n        return new EventRequest(this, options).perform();\n    }\n\n    // @todo: implement local tts request\n    /*public ttsRequest(query) {\n        if (!query) {\n            throw new ApiAiClientConfigurationError(\"Query should not be empty\");\n        }\n        return new TTSRequest(this).makeTTSRequest(query);\n    }*/\n\n    /*public userEntitiesRequest(options: IRequestOptions = {}): UserEntitiesRequest {\n        return new UserEntitiesRequest(this, options);\n    }*/\n\n    public getAccessToken(): string {\n        return this.accessToken;\n    }\n\n    public getApiVersion(): string {\n        return (this.apiVersion) ? this.apiVersion : ApiAiConstants.DEFAULT_API_VERSION;\n    }\n\n    public getApiLang(): ApiAiConstants.AVAILABLE_LANGUAGES {\n        return (this.apiLang) ? this.apiLang : ApiAiConstants.DEFAULT_CLIENT_LANG;\n    }\n\n    public getApiBaseUrl(): string {\n        return (this.apiBaseUrl) ? this.apiBaseUrl : ApiAiConstants.DEFAULT_BASE_URL;\n    }\n\n    public setSessionId(sessionId: string) {\n        this.sessionId = sessionId;\n    }\n\n    public getSessionId(): string {\n        return this.sessionId;\n    }\n\n    /**\n     * generates new random UUID\n     * @returns {string}\n     */\n    private guid(): string {\n        const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n        return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" +\n            s4() + \"-\" + s4() + s4() + s4();\n    }\n}\n","export namespace ApiAiConstants {\n  export enum AVAILABLE_LANGUAGES {\n    EN = \"en\" as any, DE = \"de\" as any, ES = \"es\" as any, PT_BR = \"pt-BR\" as any, ZH_HK = \"zh-HK\" as any,\n    ZH_CN = \"zh-CN\" as any, ZH_TW = \"zh-TW\" as any, NL = \"nl\" as any, FR = \"fr\" as any, IT = \"it\" as any,\n    JA = \"ja\" as any, KO = \"ko\" as any, PT = \"pt\" as any, RU = \"ru\" as any, UK = \"uk\" as any\n  }\n\n  export const VERSION: string = \"2.0.0-beta.20\";\n  export const DEFAULT_BASE_URL: string = \"https://api.api.ai/v1/\";\n  export const DEFAULT_API_VERSION: string = \"20150910\";\n  export const DEFAULT_CLIENT_LANG: AVAILABLE_LANGUAGES = AVAILABLE_LANGUAGES.EN;\n}\n","export abstract class ApiAiBaseError extends Error {\n\n    public abstract name: string;\n    public stack: string;\n    constructor(public message: string) {\n        super(message);\n        this.stack = new Error().stack;\n    }\n}\n\nexport class ApiAiClientConfigurationError extends ApiAiBaseError {\n\n    public name: string = \"ApiAiClientConfigurationError\";\n\n    constructor(message: string) {\n        super(message);\n    }\n}\n\nexport class ApiAiRequestError extends ApiAiBaseError {\n\n    public name: string = \"ApiAiRequestError\";\n\n    constructor(public message: string, public code: number = null) {\n        super(message);\n    }\n}\n","import {ApiAiConstants} from \"./ApiAiConstants\";\n\nexport interface IRequestOptions {\n    query?: string;\n    event?: {name: string, data?: IStringMap};\n    sessionId?: string;\n    lang?: ApiAiConstants.AVAILABLE_LANGUAGES;\n}\n\nexport interface IServerResponse {\n    id?: string;\n    result?: {\n        action: string,\n        resolvedQuery: string,\n        speech: string;\n        fulfillment?: {\n            speech: string\n        }\n    };\n    status: {\n        code: number,\n        errorDetails?: string,\n        errorID?: string,\n        errorType: string\n    };\n}\n\nexport interface IStringMap { [s: string]: string; }\n\nexport interface IApiClientOptions {\n    lang?: ApiAiConstants.AVAILABLE_LANGUAGES;\n    version?: string;\n    baseUrl?: string;\n    sessionId?: string;\n    streamClientClass?: IStreamClientConstructor;\n    accessToken: string;\n}\n\nexport interface IStreamClientConstructor {\n    new (options: IStreamClientOptions): IStreamClient;\n}\n\nexport interface IStreamClient {\n    init(): void;\n    open(): void;\n    close(): void;\n    startListening(): void;\n    stopListening(): void;\n}\n\nexport interface IStreamClientOptions {\n    server?: string;\n    token?: string;\n    sessionId?: string;\n    lang?: ApiAiConstants.AVAILABLE_LANGUAGES;\n    contentType?: string;\n    readingInterval?: string;\n    onOpen?: () => void;\n    onClose?: () => void;\n    onInit?: () => void;\n    onStartListening?: () => void;\n    onStopListening?: () => void;\n    onResults?: (data: IServerResponse) => void;\n    onEvent?: (eventCode: IStreamClient.EVENT, message: string) => void;\n    onError?: (errorCode: IStreamClient.ERROR, message: string) => void;\n}\n\nexport namespace IStreamClient {\n    export enum ERROR {\n        ERR_NETWORK,\n        ERR_AUDIO,\n        ERR_SERVER,\n        ERR_CLIENT\n    }\n    export enum EVENT {\n        MSG_WAITING_MICROPHONE,\n        MSG_MEDIA_STREAM_CREATED,\n        MSG_INIT_RECORDER,\n        MSG_RECORDING,\n        MSG_SEND,\n        MSG_SEND_EMPTY,\n        MSG_SEND_EOS_OR_JSON,\n        MSG_WEB_SOCKET,\n        MSG_WEB_SOCKET_OPEN,\n        MSG_WEB_SOCKET_CLOSE,\n        MSG_STOP,\n        MSG_CONFIG_CHANGED\n    }\n}\n","import Request from \"./Request\";\nexport class EventRequest extends Request {\n\n}\n","import {ApiAiClient} from \"../ApiAiClient\";\nimport {ApiAiRequestError} from \"../Errors\";\nimport {IRequestOptions, IServerResponse, IStringMap} from \"../Interfaces\";\nimport XhrRequest from \"../XhrRequest\";\n\nabstract class Request {\n\n  private static handleSuccess(xhr: XMLHttpRequest): Promise<IServerResponse> {\n    return Promise.resolve(JSON.parse(xhr.responseText));\n  }\n\n  private static handleError(xhr: XMLHttpRequest): Promise<ApiAiRequestError> {\n\n    let error = new ApiAiRequestError(null);\n    try {\n      const serverResponse: IServerResponse = JSON.parse(xhr.responseText);\n      if (serverResponse.status && serverResponse.status.errorDetails) {\n        error = new ApiAiRequestError(serverResponse.status.errorDetails, serverResponse.status.code);\n      } else {\n        error = new ApiAiRequestError(xhr.statusText, xhr.status);\n      }\n    } catch (e) {\n      error = new ApiAiRequestError(xhr.statusText, xhr.status);\n    }\n\n    return Promise.reject<ApiAiRequestError>(error);\n  }\n\n  protected uri;\n  protected requestMethod;\n  protected headers;\n\n  constructor(protected apiAiClient: ApiAiClient, protected options: IRequestOptions) {\n\n    this.uri = this.apiAiClient.getApiBaseUrl() + \"query?v=\" + this.apiAiClient.getApiVersion();\n    this.requestMethod = XhrRequest.Method.POST;\n    this.headers = {\n      Authorization: \"Bearer \" + this.apiAiClient.getAccessToken(),\n    };\n\n    this.options.lang = this.apiAiClient.getApiLang();\n    this.options.sessionId = this.apiAiClient.getSessionId();\n\n  }\n\n  public perform(overrideOptions = null): Promise<IServerResponse> {\n\n    const options = overrideOptions ? overrideOptions : this.options;\n\n    return XhrRequest.ajax(this.requestMethod, this.uri, options as IStringMap, this.headers)\n      .then(Request.handleSuccess.bind(this))\n      .catch(Request.handleError.bind(this));\n  }\n}\n\nexport default Request;\n","import Request from \"./Request\";\nexport default class TextRequest extends Request {\n\n}\n","import {IStringMap} from \"./Interfaces\";\n/**\n * quick ts implementation of example from\n * https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise\n * with some minor improvements\n * @todo: test (?)\n * @todo: add node.js implementation with node's http inside. Just to make SDK cross-platform\n */\nclass XhrRequest {\n    // Method that performs the ajax request\n    public static ajax(\n        method: XhrRequest.Method,\n        url: string,\n        args: IStringMap = null,\n        headers: IStringMap = null,\n        options: IStringMap = {}\n    ): Promise<any> {\n\n        // Creating a promise\n        return new Promise((resolve, reject) => {\n\n            // Instantiates the XMLHttpRequest\n            const client: XMLHttpRequest = XhrRequest.createXMLHTTPObject();\n            let uri: string = url;\n            let payload = null;\n\n            // Add given payload to get request\n            if (args && (method === XhrRequest.Method.GET)) {\n                uri += \"?\";\n                let argcount = 0;\n                for (const key in args) {\n                    if (args.hasOwnProperty(key)) {\n                        if (argcount++) {\n                            uri += \"&\";\n                        }\n                        uri += encodeURIComponent(key) + \"=\" + encodeURIComponent(args[key]);\n                    }\n                }\n            } else if (args) {\n                if (!headers) {\n                    headers = {};\n                }\n                headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\n                payload = JSON.stringify(args);\n            }\n\n            for (const key in options) {\n                if (key in client) {\n                    client[key] = options[key];\n                }\n            }\n\n            // hack: method[method] is somewhat like .toString for enum Method\n            // should be made in normal way\n            client.open(XhrRequest.Method[method], uri, true);\n            // Add given headers\n\n            if (headers) {\n                for (const key in headers) {\n                    if (headers.hasOwnProperty(key)) {\n                        client.setRequestHeader(key, headers[key]);\n                    }\n                }\n            }\n\n            payload ? client.send(payload) : client.send();\n\n            client.onload = () => {\n                if (client.status >= 200 && client.status < 300) {\n                    // Performs the function \"resolve\" when this.status is equal to 2xx\n                    resolve(client);\n                } else {\n                    // Performs the function \"reject\" when this.status is different than 2xx\n                    reject(client);\n                }\n            };\n            client.onerror = () => {\n                reject(client);\n            };\n        });\n\n    }\n\n    public static get(url, payload: IStringMap = null, headers: IStringMap = null, options = {}): Promise<any> {\n        return XhrRequest.ajax(XhrRequest.Method.GET, url, payload, headers, options);\n    }\n\n    public static post(url: string, payload: IStringMap = null, headers: IStringMap = null,\n                       options = {}): Promise<any> {\n        return XhrRequest.ajax(XhrRequest.Method.POST, url, payload, headers, options);\n    }\n\n    public static put(url: string, payload: IStringMap = null, headers: IStringMap = null,\n                      options = {}): Promise<any>  {\n        return XhrRequest.ajax(XhrRequest.Method.PUT, url, payload, headers, options);\n    }\n\n    public static delete(url: string, payload: IStringMap = null, headers: IStringMap = null,\n                         options = {}): Promise<any>  {\n        return XhrRequest.ajax(XhrRequest.Method.DELETE, url, payload, headers, options);\n    }\n\n    private static XMLHttpFactories: Function[] = [\n        () => new XMLHttpRequest(),\n        () => new window[\"ActiveXObject\"](\"Msxml2.XMLHTTP\"),\n        () => new window[\"ActiveXObject\"](\"Msxml3.XMLHTTP\"),\n        () => new window[\"ActiveXObject\"](\"Microsoft.XMLHTTP\")\n    ];\n\n    private static createXMLHTTPObject(): XMLHttpRequest {\n        let xmlhttp: XMLHttpRequest = null;\n        for (const i of XhrRequest.XMLHttpFactories) {\n            try {\n                xmlhttp = i();\n            } catch (e) {\n                continue;\n            }\n            break;\n        }\n\n        return xmlhttp;\n    }\n}\n\nnamespace XhrRequest {\n    export enum Method {\n        GET = \"GET\" as any,\n        POST = \"POST\" as any,\n        PUT = \"PUT\" as any,\n        DELETE = \"DELETE\" as any\n    }\n}\n\nexport default XhrRequest;\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<chat-dialog></chat-dialog>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { ChatModule } from './chat/chat.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ChatModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Injectable } from '@angular/core';\n\nimport { environment } from '../environments/environment';\n\nimport { ApiAiClient } from './api-ai-javascript';\n\nimport { Observable, BehaviorSubject, pipe } from 'rxjs';\nimport { scan } from 'rxjs/operators';\n\n// Message class for displaying messages in the component\nexport class Message {\n  constructor(public content: string, public sentBy: string) {}\n}\n\n@Injectable()\nexport class ChatService {\n\n  readonly token = environment.dialogflow.angularpocbot;\n  readonly client = new ApiAiClient({ accessToken: this.token });\n\n  conversation = new BehaviorSubject<Message[]>([]);\n\n  constructor() {}\n\n  // Sends and receives messages via DialogFlow\n  converse(msg: string) {\n    const userMessage = new Message(msg, 'user');\n    this.update(userMessage);\n\n    return this.client.textRequest(msg)\n               .then(res => {\n                  const speech = res.result.fulfillment.speech;\n                  const botMessage = new Message(speech, 'bot');\n                  this.update(botMessage);\n               });\n  }\n\n\n\n  // Adds message to source\n  update(msg: Message) {\n    this.conversation.next([msg]);\n  }\n\n}","module.exports = \"\"","module.exports = \"<h1>Angular Bot</h1>\\n\\n<ng-container *ngFor=\\\"let message of messages | async\\\">\\n\\n  <div class=\\\"message\\\" [ngClass]=\\\"{ 'from': message.sentBy === 'bot',\\n                                    'to':   message.sentBy === 'user' }\\\">\\n    {{ message.content }}\\n  </div>\\n\\n</ng-container>\\n\\n\\n<label for=\\\"nameField\\\">Your Message</label>\\n\\n\\n<input [(ngModel)]=\\\"formValue\\\" (keyup.enter)=\\\"sendMessage()\\\" type=\\\"text\\\">\\n\\n<button (click)=\\\"sendMessage()\\\">Send</button>\"","import { Component, OnInit } from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { ApiAiClient } from 'api-ai-javascript';\nimport { ChatService, Message } from '../../chat.service';\nimport { Observable, pipe } from 'rxjs';\nimport { scan } from 'rxjs/operators';\n\n@Component({\n  selector: 'chat-dialog',\n  templateUrl: './chat-dialog.component.html',\n  styleUrls: ['./chat-dialog.component.css']\n})\n\nexport class ChatDialogComponent implements OnInit {\n\n  messages: Observable<Message[]>;\n  formValue: string;\n\n  constructor(public chat: ChatService) { }\n\n  ngOnInit() {\n    // appends to array after each new message is added to feedSource\n    this.messages = this.chat.conversation.asObservable().pipe(\n        scan((acc, val) => acc.concat(val) ));\n  }\n\n  sendMessage() {\n    this.chat.converse(this.formValue);\n    this.formValue = '';\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ChatService } from '../chat.service';\nimport { ChatDialogComponent } from './chat-dialog/chat-dialog.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    ChatDialogComponent\n  ],\n  exports: [ ChatDialogComponent ], // <-- export here\n  providers: [ChatService]\n})\nexport class ChatModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n\n  dialogflow: {\n    angularpocbot: '75fac1b04f4f42dc9f50d7bf3c6f3382'\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}